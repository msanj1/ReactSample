[{"C:\\Sources\\ReactSample\\Forms\\src\\index.js":"1","C:\\Sources\\ReactSample\\Forms\\src\\App.js":"2","C:\\Sources\\ReactSample\\Forms\\src\\components\\SimpleInput.js":"3","C:\\Sources\\ReactSample\\Forms\\src\\hooks\\use-input.js":"4","C:\\Sources\\ReactSample\\Forms\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":214,"mtime":1631053536244,"results":"8","hashOfConfig":"7"},{"size":1360,"mtime":1631053370298,"results":"9","hashOfConfig":"7"},{"size":1304,"mtime":1631485569228,"results":"10","hashOfConfig":"7"},{"size":2765,"mtime":1631484918544,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1darz43",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Sources\\ReactSample\\Forms\\src\\index.js",[],["25","26"],"C:\\Sources\\ReactSample\\Forms\\src\\App.js",["27"],"import BasicForm from './components/BasicForm';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Sources\\ReactSample\\Forms\\src\\components\\SimpleInput.js",["28","29"],"import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangedHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    resetNameInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button onClick={formSubmissionHandler} disabled={!formIsValid}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Sources\\ReactSample\\Forms\\src\\hooks\\use-input.js",["30"],"C:\\Sources\\ReactSample\\Forms\\src\\components\\BasicForm.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":19},{"ruleId":"35","severity":1,"message":"39","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":19},{"ruleId":"35","severity":1,"message":"40","line":1,"column":21,"nodeType":"37","messageId":"38","endLine":1,"endColumn":29},{"ruleId":"35","severity":1,"message":"40","line":1,"column":22,"nodeType":"37","messageId":"38","endLine":1,"endColumn":30},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]